parameter (or (or (pair %balance_of (list %requests (pair (address %owner) (nat %token_id))) (contract %callback (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))))) (pair %exchange (nat %amount) (pair (address %inventory) (nat %token_id)))) (or (pair %mint (nat %amount) (address %to_)) (or (pair %transfer (pair %from_ address nat) (pair %tx (nat %amount) (pair %to_ address nat))) (list %update_operators (or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id))) (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))))))));
storage   (pair (pair (address %administrator) (pair (big_map %ledger (pair address nat) nat) (big_map %metadata string bytes))) (pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))))));
code
  {
    UNPAIR;     # @parameter : @storage
    IF_LEFT
      {
        IF_LEFT
          {
            # == balance_of ==
            # def f_x0(_x0):
            #   sp.verify(_x0.token_id < self.data.next_token_id, 'FA2_TOKEN_UNDEFINED')
            #   sp.result(sp.record(request = sp.record(owner = _x0.owner, token_id = _x0.token_id), balance = self.data.ledger.get((_x0.owner, _x0.token_id), default_value = 0)))
            # sp.transfer(params.requests.map(sp.build_lambda(f_x0)), sp.tez(0), params.callback) # @parameter%balance_of : @storage
            NIL operation; # list operation : @parameter%balance_of : @storage
            DUP;        # list operation : list operation : @parameter%balance_of : @storage
            DUP 3;      # @parameter%balance_of : list operation : list operation : @parameter%balance_of : @storage
            CDR;        # contract (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))) : list operation : list operation : @parameter%balance_of : @storage
            PUSH mutez 0; # mutez : contract (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))) : list operation : list operation : @parameter%balance_of : @storage
            DUP 5;      # @parameter%balance_of : mutez : contract (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))) : list operation : list operation : @parameter%balance_of : @storage
            CAR;        # list (pair (address %owner) (nat %token_id)) : mutez : contract (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))) : list operation : list operation : @parameter%balance_of : @storage
            MAP
              {
                # sp.verify(_x0.token_id < self.data.next_token_id, 'FA2_TOKEN_UNDEFINED') # pair (address %owner) (nat %token_id) : mutez : contract (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))) : list operation : list operation : @parameter%balance_of : @storage
                DUP 7;      # @storage : pair (address %owner) (nat %token_id) : mutez : contract (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))) : list operation : list operation : @parameter%balance_of : @storage
                GET 3;      # pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit) : pair (address %owner) (nat %token_id) : mutez : contract (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))) : list operation : list operation : @parameter%balance_of : @storage
                CAR;        # nat : pair (address %owner) (nat %token_id) : mutez : contract (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))) : list operation : list operation : @parameter%balance_of : @storage
                SWAP;       # pair (address %owner) (nat %token_id) : nat : mutez : contract (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))) : list operation : list operation : @parameter%balance_of : @storage
                DUP;        # pair (address %owner) (nat %token_id) : pair (address %owner) (nat %token_id) : nat : mutez : contract (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))) : list operation : list operation : @parameter%balance_of : @storage
                DUG 2;      # pair (address %owner) (nat %token_id) : nat : pair (address %owner) (nat %token_id) : mutez : contract (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))) : list operation : list operation : @parameter%balance_of : @storage
                CDR;        # nat : nat : pair (address %owner) (nat %token_id) : mutez : contract (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))) : list operation : list operation : @parameter%balance_of : @storage
                COMPARE;    # int : pair (address %owner) (nat %token_id) : mutez : contract (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))) : list operation : list operation : @parameter%balance_of : @storage
                LT;         # bool : pair (address %owner) (nat %token_id) : mutez : contract (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))) : list operation : list operation : @parameter%balance_of : @storage
                IF
                  {}
                  {
                    PUSH string "FA2_TOKEN_UNDEFINED"; # string : pair (address %owner) (nat %token_id) : mutez : contract (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))) : list operation : list operation : @parameter%balance_of : @storage
                    FAILWITH;   # FAILED
                  }; # pair (address %owner) (nat %token_id) : mutez : contract (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))) : list operation : list operation : @parameter%balance_of : @storage
                # sp.result(sp.record(request = sp.record(owner = _x0.owner, token_id = _x0.token_id), balance = self.data.ledger.get((_x0.owner, _x0.token_id), default_value = 0))) # pair (address %owner) (nat %token_id) : mutez : contract (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))) : list operation : list operation : @parameter%balance_of : @storage
                DUP 7;      # @storage : pair (address %owner) (nat %token_id) : mutez : contract (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))) : list operation : list operation : @parameter%balance_of : @storage
                CAR;        # pair (address %administrator) (pair (big_map %ledger (pair address nat) nat) (big_map %metadata string bytes)) : pair (address %owner) (nat %token_id) : mutez : contract (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))) : list operation : list operation : @parameter%balance_of : @storage
                GET 3;      # big_map (pair address nat) nat : pair (address %owner) (nat %token_id) : mutez : contract (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))) : list operation : list operation : @parameter%balance_of : @storage
                SWAP;       # pair (address %owner) (nat %token_id) : big_map (pair address nat) nat : mutez : contract (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))) : list operation : list operation : @parameter%balance_of : @storage
                DUP;        # pair (address %owner) (nat %token_id) : pair (address %owner) (nat %token_id) : big_map (pair address nat) nat : mutez : contract (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))) : list operation : list operation : @parameter%balance_of : @storage
                CDR;        # nat : pair (address %owner) (nat %token_id) : big_map (pair address nat) nat : mutez : contract (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))) : list operation : list operation : @parameter%balance_of : @storage
                SWAP;       # pair (address %owner) (nat %token_id) : nat : big_map (pair address nat) nat : mutez : contract (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))) : list operation : list operation : @parameter%balance_of : @storage
                DUP;        # pair (address %owner) (nat %token_id) : pair (address %owner) (nat %token_id) : nat : big_map (pair address nat) nat : mutez : contract (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))) : list operation : list operation : @parameter%balance_of : @storage
                DUG 3;      # pair (address %owner) (nat %token_id) : nat : big_map (pair address nat) nat : pair (address %owner) (nat %token_id) : mutez : contract (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))) : list operation : list operation : @parameter%balance_of : @storage
                CAR;        # address : nat : big_map (pair address nat) nat : pair (address %owner) (nat %token_id) : mutez : contract (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))) : list operation : list operation : @parameter%balance_of : @storage
                PAIR;       # pair address nat : big_map (pair address nat) nat : pair (address %owner) (nat %token_id) : mutez : contract (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))) : list operation : list operation : @parameter%balance_of : @storage
                GET;        # option nat : pair (address %owner) (nat %token_id) : mutez : contract (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))) : list operation : list operation : @parameter%balance_of : @storage
                IF_NONE
                  {
                    PUSH nat 0; # nat : pair (address %owner) (nat %token_id) : mutez : contract (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))) : list operation : list operation : @parameter%balance_of : @storage
                  }
                  {}; # nat : pair (address %owner) (nat %token_id) : mutez : contract (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))) : list operation : list operation : @parameter%balance_of : @storage
                SWAP;       # pair (address %owner) (nat %token_id) : nat : mutez : contract (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))) : list operation : list operation : @parameter%balance_of : @storage
                PAIR;       # pair (pair (address %owner) (nat %token_id)) nat : mutez : contract (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))) : list operation : list operation : @parameter%balance_of : @storage
              }; # list (pair (pair (address %owner) (nat %token_id)) nat) : mutez : contract (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))) : list operation : list operation : @parameter%balance_of : @storage
            DIG 4;      # list operation : list (pair (pair (address %owner) (nat %token_id)) nat) : mutez : contract (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))) : list operation : @parameter%balance_of : @storage
            DROP;       # list (pair (pair (address %owner) (nat %token_id)) nat) : mutez : contract (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))) : list operation : @parameter%balance_of : @storage
            DIG 4;      # @parameter%balance_of : list (pair (pair (address %owner) (nat %token_id)) nat) : mutez : contract (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))) : list operation : @storage
            DROP;       # list (pair (pair (address %owner) (nat %token_id)) nat) : mutez : contract (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))) : list operation : @storage
            TRANSFER_TOKENS; # operation : list operation : @storage
            CONS;       # list operation : @storage
          }
          {
            # == exchange ==
            # sp.verify((sp.sender == sp.sender) | (self.data.operators.contains(sp.record(owner = sp.sender, operator = sp.sender, token_id = 0))), 'FA2_NOT_OPERATOR') # @parameter%exchange : @storage
            SENDER;     # @sender : @parameter%exchange : @storage
            SENDER;     # @sender : @sender : @parameter%exchange : @storage
            COMPARE;    # int : @parameter%exchange : @storage
            EQ;         # bool : @parameter%exchange : @storage
            IF
              {
                PUSH bool True; # bool : @parameter%exchange : @storage
              }
              {
                SWAP;       # @storage : @parameter%exchange
                DUP;        # @storage : @storage : @parameter%exchange
                DUG 2;      # @storage : @parameter%exchange : @storage
                GET 3;      # pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit) : @parameter%exchange : @storage
                CDR;        # big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : @parameter%exchange : @storage
                PUSH nat 0; # nat : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : @parameter%exchange : @storage
                SENDER;     # @sender : nat : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : @parameter%exchange : @storage
                SENDER;     # @sender : @sender : nat : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : @parameter%exchange : @storage
                PAIR 3;     # pair @sender (pair @sender nat) : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : @parameter%exchange : @storage
                MEM;        # bool : @parameter%exchange : @storage
              }; # bool : @parameter%exchange : @storage
            IF
              {}
              {
                PUSH string "FA2_NOT_OPERATOR"; # string : @parameter%exchange : @storage
                FAILWITH;   # FAILED
              }; # @parameter%exchange : @storage
            SWAP;       # @storage : @parameter%exchange
            # self.data.ledger[(sp.sender, 0)] = sp.as_nat(self.data.ledger.get((sp.sender, 0), default_value = 0) - params.amount, message = 'FA2_INSUFFICIENT_BALANCE') # @storage : @parameter%exchange
            DUP;        # @storage : @storage : @parameter%exchange
            DUG 2;      # @storage : @parameter%exchange : @storage
            UNPAIR;     # pair (address %administrator) (pair (big_map %ledger (pair address nat) nat) (big_map %metadata string bytes)) : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%exchange : @storage
            UNPAIR;     # address : pair (big_map %ledger (pair address nat) nat) (big_map %metadata string bytes) : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%exchange : @storage
            SWAP;       # pair (big_map %ledger (pair address nat) nat) (big_map %metadata string bytes) : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%exchange : @storage
            UNPAIR;     # big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%exchange : @storage
            DUP 5;      # @parameter%exchange : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%exchange : @storage
            CAR;        # nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%exchange : @storage
            DIG 6;      # @storage : nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%exchange
            CAR;        # pair (address %administrator) (pair (big_map %ledger (pair address nat) nat) (big_map %metadata string bytes)) : nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%exchange
            GET 3;      # big_map (pair address nat) nat : nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%exchange
            PUSH nat 0; # nat : big_map (pair address nat) nat : nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%exchange
            SENDER;     # @sender : nat : big_map (pair address nat) nat : nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%exchange
            PAIR;       # pair @sender nat : big_map (pair address nat) nat : nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%exchange
            GET;        # option nat : nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%exchange
            IF_NONE
              {
                PUSH nat 0; # nat : nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%exchange
              }
              {}; # nat : nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%exchange
            SUB;        # int : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%exchange
            ISNAT;      # option nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%exchange
            IF_NONE
              {
                PUSH string "FA2_INSUFFICIENT_BALANCE"; # string : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%exchange
                FAILWITH;   # FAILED
              }
              {}; # @some : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%exchange
            SOME;       # option nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%exchange
            PUSH nat 0; # nat : option nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%exchange
            SENDER;     # @sender : nat : option nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%exchange
            PAIR;       # pair @sender nat : option nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%exchange
            UPDATE;     # big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%exchange
            PAIR;       # pair (big_map (pair address nat) nat) (big_map string bytes) : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%exchange
            SWAP;       # address : pair (big_map (pair address nat) nat) (big_map string bytes) : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%exchange
            PAIR;       # pair address (pair (big_map (pair address nat) nat) (big_map string bytes)) : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%exchange
            PAIR;       # pair (pair address (pair (big_map (pair address nat) nat) (big_map string bytes))) (pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))))) : @parameter%exchange
            # self.data.ledger[(sp.address('tz1QUYw77iqCsYUutxF511nhRhd1Z21YJKxU'), 0)] = self.data.ledger.get((sp.address('tz1QUYw77iqCsYUutxF511nhRhd1Z21YJKxU'), 0), default_value = 0) + params.amount # pair (pair address (pair (big_map (pair address nat) nat) (big_map string bytes))) (pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))))) : @parameter%exchange
            DUP;        # pair (pair address (pair (big_map (pair address nat) nat) (big_map string bytes))) (pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map string bytes))) (pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))))) : @parameter%exchange
            DUG 2;      # pair (pair address (pair (big_map (pair address nat) nat) (big_map string bytes))) (pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))))) : @parameter%exchange : pair (pair address (pair (big_map (pair address nat) nat) (big_map string bytes))) (pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))))
            UNPAIR;     # pair address (pair (big_map (pair address nat) nat) (big_map string bytes)) : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%exchange : pair (pair address (pair (big_map (pair address nat) nat) (big_map string bytes))) (pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))))
            UNPAIR;     # address : pair (big_map (pair address nat) nat) (big_map string bytes) : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%exchange : pair (pair address (pair (big_map (pair address nat) nat) (big_map string bytes))) (pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))))
            SWAP;       # pair (big_map (pair address nat) nat) (big_map string bytes) : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%exchange : pair (pair address (pair (big_map (pair address nat) nat) (big_map string bytes))) (pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))))
            UNPAIR;     # big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%exchange : pair (pair address (pair (big_map (pair address nat) nat) (big_map string bytes))) (pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))))
            DUP 5;      # @parameter%exchange : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%exchange : pair (pair address (pair (big_map (pair address nat) nat) (big_map string bytes))) (pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))))
            CAR;        # nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%exchange : pair (pair address (pair (big_map (pair address nat) nat) (big_map string bytes))) (pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))))
            DIG 6;      # pair (pair address (pair (big_map (pair address nat) nat) (big_map string bytes))) (pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))))) : nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%exchange
            CAR;        # pair address (pair (big_map (pair address nat) nat) (big_map string bytes)) : nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%exchange
            GET 3;      # big_map (pair address nat) nat : nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%exchange
            PUSH (pair address nat) (Pair "tz1QUYw77iqCsYUutxF511nhRhd1Z21YJKxU" 0); # pair address nat : big_map (pair address nat) nat : nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%exchange
            GET;        # option nat : nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%exchange
            IF_NONE
              {
                PUSH nat 0; # nat : nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%exchange
              }
              {}; # nat : nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%exchange
            ADD;        # nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%exchange
            SOME;       # option nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%exchange
            PUSH (pair address nat) (Pair "tz1QUYw77iqCsYUutxF511nhRhd1Z21YJKxU" 0); # pair address nat : option nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%exchange
            UPDATE;     # big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%exchange
            PAIR;       # pair (big_map (pair address nat) nat) (big_map string bytes) : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%exchange
            SWAP;       # address : pair (big_map (pair address nat) nat) (big_map string bytes) : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%exchange
            PAIR;       # pair address (pair (big_map (pair address nat) nat) (big_map string bytes)) : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%exchange
            PAIR;       # pair (pair address (pair (big_map (pair address nat) nat) (big_map string bytes))) (pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))))) : @parameter%exchange
            SWAP;       # @parameter%exchange : pair (pair address (pair (big_map (pair address nat) nat) (big_map string bytes))) (pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))))
            # sp.transfer(sp.record(to_ = sp.sender, token_id = params.token_id), sp.tez(0), sp.contract(sp.TRecord(to_ = sp.TAddress, token_id = sp.TNat).layout(("to_", "token_id")), params.inventory, entry_point='mint_existing').open_some()) # @parameter%exchange : pair (pair address (pair (big_map (pair address nat) nat) (big_map string bytes))) (pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))))
            DUP;        # @parameter%exchange : @parameter%exchange : pair (pair address (pair (big_map (pair address nat) nat) (big_map string bytes))) (pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))))
            GET 3;      # address : @parameter%exchange : pair (pair address (pair (big_map (pair address nat) nat) (big_map string bytes))) (pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))))
            CONTRACT %mint_existing (pair (address %to_) (nat %token_id)); # option (contract (pair (address %to_) (nat %token_id))) : @parameter%exchange : pair (pair address (pair (big_map (pair address nat) nat) (big_map string bytes))) (pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))))
            IF_NONE
              {
                PUSH int 235; # int : @parameter%exchange : pair (pair address (pair (big_map (pair address nat) nat) (big_map string bytes))) (pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))))
                FAILWITH;   # FAILED
              }
              {}; # @some : @parameter%exchange : pair (pair address (pair (big_map (pair address nat) nat) (big_map string bytes))) (pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))))
            NIL operation; # list operation : @some : @parameter%exchange : pair (pair address (pair (big_map (pair address nat) nat) (big_map string bytes))) (pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))))
            SWAP;       # @some : list operation : @parameter%exchange : pair (pair address (pair (big_map (pair address nat) nat) (big_map string bytes))) (pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))))
            PUSH mutez 0; # mutez : @some : list operation : @parameter%exchange : pair (pair address (pair (big_map (pair address nat) nat) (big_map string bytes))) (pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))))
            DIG 3;      # @parameter%exchange : mutez : @some : list operation : pair (pair address (pair (big_map (pair address nat) nat) (big_map string bytes))) (pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))))
            GET 4;      # nat : mutez : @some : list operation : pair (pair address (pair (big_map (pair address nat) nat) (big_map string bytes))) (pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))))
            SENDER;     # @sender : nat : mutez : @some : list operation : pair (pair address (pair (big_map (pair address nat) nat) (big_map string bytes))) (pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))))
            PAIR;       # pair @sender nat : mutez : @some : list operation : pair (pair address (pair (big_map (pair address nat) nat) (big_map string bytes))) (pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))))
            TRANSFER_TOKENS; # operation : list operation : pair (pair address (pair (big_map (pair address nat) nat) (big_map string bytes))) (pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))))
            CONS;       # list operation : pair (pair address (pair (big_map (pair address nat) nat) (big_map string bytes))) (pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))))
          }; # list operation : pair (pair address (pair (big_map (pair address nat) nat) (big_map string bytes))) (pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))))
      }
      {
        IF_LEFT
          {
            SWAP;       # @storage : @parameter%mint
            # == mint ==
            # sp.verify(sp.sender == self.data.administrator, 'FA2_NOT_ADMIN') # @storage : @parameter%mint
            DUP;        # @storage : @storage : @parameter%mint
            DUG 2;      # @storage : @parameter%mint : @storage
            CAR;        # pair (address %administrator) (pair (big_map %ledger (pair address nat) nat) (big_map %metadata string bytes)) : @parameter%mint : @storage
            CAR;        # address : @parameter%mint : @storage
            SENDER;     # @sender : address : @parameter%mint : @storage
            COMPARE;    # int : @parameter%mint : @storage
            EQ;         # bool : @parameter%mint : @storage
            IF
              {}
              {
                PUSH string "FA2_NOT_ADMIN"; # string : @parameter%mint : @storage
                FAILWITH;   # FAILED
              }; # @parameter%mint : @storage
            SWAP;       # @storage : @parameter%mint
            # self.data.supply[0] += params.amount # @storage : @parameter%mint
            DUP;        # @storage : @storage : @parameter%mint
            GET 5;      # big_map nat nat : @storage : @parameter%mint
            DUP;        # big_map nat nat : big_map nat nat : @storage : @parameter%mint
            PUSH nat 0; # nat : big_map nat nat : big_map nat nat : @storage : @parameter%mint
            DUP;        # nat : nat : big_map nat nat : big_map nat nat : @storage : @parameter%mint
            DUG 2;      # nat : big_map nat nat : nat : big_map nat nat : @storage : @parameter%mint
            GET;        # option nat : nat : big_map nat nat : @storage : @parameter%mint
            IF_NONE
              {
                PUSH int 202; # int : nat : big_map nat nat : @storage : @parameter%mint
                FAILWITH;   # FAILED
              }
              {}; # @some : nat : big_map nat nat : @storage : @parameter%mint
            DUP 5;      # @parameter%mint : @some : nat : big_map nat nat : @storage : @parameter%mint
            CAR;        # nat : @some : nat : big_map nat nat : @storage : @parameter%mint
            ADD;        # nat : nat : big_map nat nat : @storage : @parameter%mint
            SOME;       # option nat : nat : big_map nat nat : @storage : @parameter%mint
            SWAP;       # nat : option nat : big_map nat nat : @storage : @parameter%mint
            UPDATE;     # big_map nat nat : @storage : @parameter%mint
            UPDATE 5;   # @storage : @parameter%mint
            # self.data.ledger[(params.to_, 0)] = self.data.ledger.get((params.to_, 0), default_value = 0) + params.amount # @storage : @parameter%mint
            DUP;        # @storage : @storage : @parameter%mint
            DUG 2;      # @storage : @parameter%mint : @storage
            UNPAIR;     # pair (address %administrator) (pair (big_map %ledger (pair address nat) nat) (big_map %metadata string bytes)) : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%mint : @storage
            UNPAIR;     # address : pair (big_map %ledger (pair address nat) nat) (big_map %metadata string bytes) : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%mint : @storage
            SWAP;       # pair (big_map %ledger (pair address nat) nat) (big_map %metadata string bytes) : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%mint : @storage
            UNPAIR;     # big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%mint : @storage
            DUP 5;      # @parameter%mint : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%mint : @storage
            CAR;        # nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%mint : @storage
            DIG 6;      # @storage : nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%mint
            CAR;        # pair (address %administrator) (pair (big_map %ledger (pair address nat) nat) (big_map %metadata string bytes)) : nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%mint
            GET 3;      # big_map (pair address nat) nat : nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%mint
            PUSH nat 0; # nat : big_map (pair address nat) nat : nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%mint
            DUP 8;      # @parameter%mint : nat : big_map (pair address nat) nat : nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%mint
            CDR;        # address : nat : big_map (pair address nat) nat : nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%mint
            PAIR;       # pair address nat : big_map (pair address nat) nat : nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%mint
            GET;        # option nat : nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%mint
            IF_NONE
              {
                PUSH nat 0; # nat : nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%mint
              }
              {}; # nat : nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%mint
            ADD;        # nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%mint
            SOME;       # option nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%mint
            PUSH nat 0; # nat : option nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%mint
            DIG 6;      # @parameter%mint : nat : option nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))))
            CDR;        # address : nat : option nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))))
            PAIR;       # pair address nat : option nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))))
            UPDATE;     # big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))))
            PAIR;       # pair (big_map (pair address nat) nat) (big_map string bytes) : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))))
            SWAP;       # address : pair (big_map (pair address nat) nat) (big_map string bytes) : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))))
            PAIR;       # pair address (pair (big_map (pair address nat) nat) (big_map string bytes)) : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))))
            PAIR;       # pair (pair address (pair (big_map (pair address nat) nat) (big_map string bytes))) (pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))))
          }
          {
            IF_LEFT
              {
                SWAP;       # @storage : @parameter%transfer
                # == transfer ==
                # self.data.ledger[params.from_] = sp.as_nat(self.data.ledger.get(params.from_, default_value = 0) - params.tx.amount, message = 'FA2_INSUFFICIENT_BALANCE') # @storage : @parameter%transfer
                DUP;        # @storage : @storage : @parameter%transfer
                DUG 2;      # @storage : @parameter%transfer : @storage
                UNPAIR;     # pair (address %administrator) (pair (big_map %ledger (pair address nat) nat) (big_map %metadata string bytes)) : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%transfer : @storage
                UNPAIR;     # address : pair (big_map %ledger (pair address nat) nat) (big_map %metadata string bytes) : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%transfer : @storage
                SWAP;       # pair (big_map %ledger (pair address nat) nat) (big_map %metadata string bytes) : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%transfer : @storage
                UNPAIR;     # big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%transfer : @storage
                DUP 5;      # @parameter%transfer : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%transfer : @storage
                GET 3;      # nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%transfer : @storage
                DIG 6;      # @storage : nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%transfer
                CAR;        # pair (address %administrator) (pair (big_map %ledger (pair address nat) nat) (big_map %metadata string bytes)) : nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%transfer
                GET 3;      # big_map (pair address nat) nat : nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%transfer
                DUP 7;      # @parameter%transfer : big_map (pair address nat) nat : nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%transfer
                CAR;        # pair address nat : big_map (pair address nat) nat : nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%transfer
                GET;        # option nat : nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%transfer
                IF_NONE
                  {
                    PUSH nat 0; # nat : nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%transfer
                  }
                  {}; # nat : nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%transfer
                SUB;        # int : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%transfer
                ISNAT;      # option nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%transfer
                IF_NONE
                  {
                    PUSH string "FA2_INSUFFICIENT_BALANCE"; # string : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%transfer
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%transfer
                SOME;       # option nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%transfer
                DUP 6;      # @parameter%transfer : option nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%transfer
                CAR;        # pair address nat : option nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%transfer
                UPDATE;     # big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%transfer
                PAIR;       # pair (big_map (pair address nat) nat) (big_map string bytes) : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%transfer
                SWAP;       # address : pair (big_map (pair address nat) nat) (big_map string bytes) : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%transfer
                PAIR;       # pair address (pair (big_map (pair address nat) nat) (big_map string bytes)) : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%transfer
                PAIR;       # pair (pair address (pair (big_map (pair address nat) nat) (big_map string bytes))) (pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))))) : @parameter%transfer
                # self.data.ledger[params.tx.to_] = self.data.ledger.get(params.tx.to_, default_value = 0) + params.tx.amount # pair (pair address (pair (big_map (pair address nat) nat) (big_map string bytes))) (pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))))) : @parameter%transfer
                DUP;        # pair (pair address (pair (big_map (pair address nat) nat) (big_map string bytes))) (pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))))) : pair (pair address (pair (big_map (pair address nat) nat) (big_map string bytes))) (pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))))) : @parameter%transfer
                DUG 2;      # pair (pair address (pair (big_map (pair address nat) nat) (big_map string bytes))) (pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))))) : @parameter%transfer : pair (pair address (pair (big_map (pair address nat) nat) (big_map string bytes))) (pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))))
                UNPAIR;     # pair address (pair (big_map (pair address nat) nat) (big_map string bytes)) : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%transfer : pair (pair address (pair (big_map (pair address nat) nat) (big_map string bytes))) (pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))))
                UNPAIR;     # address : pair (big_map (pair address nat) nat) (big_map string bytes) : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%transfer : pair (pair address (pair (big_map (pair address nat) nat) (big_map string bytes))) (pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))))
                SWAP;       # pair (big_map (pair address nat) nat) (big_map string bytes) : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%transfer : pair (pair address (pair (big_map (pair address nat) nat) (big_map string bytes))) (pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))))
                UNPAIR;     # big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%transfer : pair (pair address (pair (big_map (pair address nat) nat) (big_map string bytes))) (pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))))
                DUP 5;      # @parameter%transfer : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%transfer : pair (pair address (pair (big_map (pair address nat) nat) (big_map string bytes))) (pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))))
                GET 3;      # nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%transfer : pair (pair address (pair (big_map (pair address nat) nat) (big_map string bytes))) (pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))))
                DIG 6;      # pair (pair address (pair (big_map (pair address nat) nat) (big_map string bytes))) (pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))))) : nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%transfer
                CAR;        # pair address (pair (big_map (pair address nat) nat) (big_map string bytes)) : nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%transfer
                GET 3;      # big_map (pair address nat) nat : nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%transfer
                DUP 7;      # @parameter%transfer : big_map (pair address nat) nat : nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%transfer
                GET 4;      # pair address nat : big_map (pair address nat) nat : nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%transfer
                GET;        # option nat : nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%transfer
                IF_NONE
                  {
                    PUSH nat 0; # nat : nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%transfer
                  }
                  {}; # nat : nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%transfer
                ADD;        # nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%transfer
                SOME;       # option nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%transfer
                DIG 5;      # @parameter%transfer : option nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))))
                GET 4;      # pair address nat : option nat : big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))))
                UPDATE;     # big_map (pair address nat) nat : big_map string bytes : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))))
                PAIR;       # pair (big_map (pair address nat) nat) (big_map string bytes) : address : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))))
                SWAP;       # address : pair (big_map (pair address nat) nat) (big_map string bytes) : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))))
                PAIR;       # pair address (pair (big_map (pair address nat) nat) (big_map string bytes)) : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))))
                PAIR;       # pair (pair address (pair (big_map (pair address nat) nat) (big_map string bytes))) (pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))))
              }
              {
                # == update_operators ==
                # for update in params: ... # @parameter%update_operators : @storage
                DUP;        # @parameter%update_operators : @parameter%update_operators : @storage
                ITER
                  {
                    # with update.match_cases(...): # or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id))) (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))) : @parameter%update_operators : @storage
                    IF_LEFT
                      {
                        # sp.verify(add_operator.owner == sp.sender, 'FA2_NOT_OWNER') # pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators : @storage
                        DUP;        # pair (address %owner) (pair (address %operator) (nat %token_id)) : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators : @storage
                        CAR;        # address : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators : @storage
                        SENDER;     # @sender : address : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators : @storage
                        COMPARE;    # int : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators : @storage
                        EQ;         # bool : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators : @storage
                        IF
                          {}
                          {
                            PUSH string "FA2_NOT_OWNER"; # string : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators : @storage
                            FAILWITH;   # FAILED
                          }; # pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators : @storage
                        # self.data.operators[add_operator] = sp.unit # pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators : @storage
                        DIG 2;      # @storage : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                        UNPAIR;     # pair (address %administrator) (pair (big_map %ledger (pair address nat) nat) (big_map %metadata string bytes)) : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                        SWAP;       # pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : pair (address %administrator) (pair (big_map %ledger (pair address nat) nat) (big_map %metadata string bytes)) : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                        UNPAIR;     # pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit) : pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) : pair (address %administrator) (pair (big_map %ledger (pair address nat) nat) (big_map %metadata string bytes)) : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                        UNPAIR;     # nat : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) : pair (address %administrator) (pair (big_map %ledger (pair address nat) nat) (big_map %metadata string bytes)) : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                        SWAP;       # big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : nat : pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) : pair (address %administrator) (pair (big_map %ledger (pair address nat) nat) (big_map %metadata string bytes)) : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                        PUSH (option unit) (Some Unit); # option unit : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : nat : pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) : pair (address %administrator) (pair (big_map %ledger (pair address nat) nat) (big_map %metadata string bytes)) : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                        DIG 5;      # pair (address %owner) (pair (address %operator) (nat %token_id)) : option unit : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : nat : pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) : pair (address %administrator) (pair (big_map %ledger (pair address nat) nat) (big_map %metadata string bytes)) : @parameter%update_operators
                        UPDATE;     # big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : nat : pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) : pair (address %administrator) (pair (big_map %ledger (pair address nat) nat) (big_map %metadata string bytes)) : @parameter%update_operators
                        SWAP;       # nat : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) : pair (address %administrator) (pair (big_map %ledger (pair address nat) nat) (big_map %metadata string bytes)) : @parameter%update_operators
                        PAIR;       # pair nat (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit) : pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) : pair (address %administrator) (pair (big_map %ledger (pair address nat) nat) (big_map %metadata string bytes)) : @parameter%update_operators
                        PAIR;       # pair (pair nat (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : pair (address %administrator) (pair (big_map %ledger (pair address nat) nat) (big_map %metadata string bytes)) : @parameter%update_operators
                        SWAP;       # pair (address %administrator) (pair (big_map %ledger (pair address nat) nat) (big_map %metadata string bytes)) : pair (pair nat (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%update_operators
                        PAIR;       # pair (pair (address %administrator) (pair (big_map %ledger (pair address nat) nat) (big_map %metadata string bytes))) (pair (pair nat (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))))) : @parameter%update_operators
                        SWAP;       # @parameter%update_operators : pair (pair (address %administrator) (pair (big_map %ledger (pair address nat) nat) (big_map %metadata string bytes))) (pair (pair nat (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))))
                      }
                      {
                        # sp.verify(remove_operator.owner == sp.sender, 'FA2_NOT_OWNER') # pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators : @storage
                        DUP;        # pair (address %owner) (pair (address %operator) (nat %token_id)) : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators : @storage
                        CAR;        # address : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators : @storage
                        SENDER;     # @sender : address : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators : @storage
                        COMPARE;    # int : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators : @storage
                        EQ;         # bool : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators : @storage
                        IF
                          {}
                          {
                            PUSH string "FA2_NOT_OWNER"; # string : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators : @storage
                            FAILWITH;   # FAILED
                          }; # pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators : @storage
                        # del self.data.operators[remove_operator] # pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators : @storage
                        DIG 2;      # @storage : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                        UNPAIR;     # pair (address %administrator) (pair (big_map %ledger (pair address nat) nat) (big_map %metadata string bytes)) : pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                        SWAP;       # pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : pair (address %administrator) (pair (big_map %ledger (pair address nat) nat) (big_map %metadata string bytes)) : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                        UNPAIR;     # pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit) : pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) : pair (address %administrator) (pair (big_map %ledger (pair address nat) nat) (big_map %metadata string bytes)) : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                        UNPAIR;     # nat : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) : pair (address %administrator) (pair (big_map %ledger (pair address nat) nat) (big_map %metadata string bytes)) : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                        SWAP;       # big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : nat : pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) : pair (address %administrator) (pair (big_map %ledger (pair address nat) nat) (big_map %metadata string bytes)) : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                        NONE unit;  # option unit : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : nat : pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) : pair (address %administrator) (pair (big_map %ledger (pair address nat) nat) (big_map %metadata string bytes)) : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                        DIG 5;      # pair (address %owner) (pair (address %operator) (nat %token_id)) : option unit : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : nat : pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) : pair (address %administrator) (pair (big_map %ledger (pair address nat) nat) (big_map %metadata string bytes)) : @parameter%update_operators
                        UPDATE;     # big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : nat : pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) : pair (address %administrator) (pair (big_map %ledger (pair address nat) nat) (big_map %metadata string bytes)) : @parameter%update_operators
                        SWAP;       # nat : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) : pair (address %administrator) (pair (big_map %ledger (pair address nat) nat) (big_map %metadata string bytes)) : @parameter%update_operators
                        PAIR;       # pair nat (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit) : pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) : pair (address %administrator) (pair (big_map %ledger (pair address nat) nat) (big_map %metadata string bytes)) : @parameter%update_operators
                        PAIR;       # pair (pair nat (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : pair (address %administrator) (pair (big_map %ledger (pair address nat) nat) (big_map %metadata string bytes)) : @parameter%update_operators
                        SWAP;       # pair (address %administrator) (pair (big_map %ledger (pair address nat) nat) (big_map %metadata string bytes)) : pair (pair nat (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) : @parameter%update_operators
                        PAIR;       # pair (pair (address %administrator) (pair (big_map %ledger (pair address nat) nat) (big_map %metadata string bytes))) (pair (pair nat (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))))) : @parameter%update_operators
                        SWAP;       # @parameter%update_operators : pair (pair (address %administrator) (pair (big_map %ledger (pair address nat) nat) (big_map %metadata string bytes))) (pair (pair nat (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))))
                      }; # list (or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id))) (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id)))) : pair (pair (address %administrator) (pair (big_map %ledger (pair address nat) nat) (big_map %metadata string bytes))) (pair (pair nat (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))))
                  }; # @parameter%update_operators : @storage
                DROP;       # @storage
              }; # pair (pair address (pair (big_map (pair address nat) nat) (big_map string bytes))) (pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))))
          }; # pair (pair address (pair (big_map (pair address nat) nat) (big_map string bytes))) (pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))))
        NIL operation; # list operation : pair (pair address (pair (big_map (pair address nat) nat) (big_map string bytes))) (pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))))
      }; # list operation : pair (pair address (pair (big_map (pair address nat) nat) (big_map string bytes))) (pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))))
    PAIR;       # pair (list operation) (pair (pair address (pair (big_map (pair address nat) nat) (big_map string bytes))) (pair (pair (nat %next_token_id) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))))))
  };